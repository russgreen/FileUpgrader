<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

  <PropertyGroup>
    <Configurations>2022;2023</Configurations>
    <Platforms>x64</Platforms>
    <Description>Upgrade Revit files to the latest version</Description>
    <Copyright>Copyright Â© Russell Green</Copyright>
    <Version>1.1.0</Version>
    <UseWindowsForms>true</UseWindowsForms>
	  <LangVersion>10</LangVersion>
	  <ImplicitUsings>true</ImplicitUsings>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(Configuration)' == '2022'">
    <TargetFramework>net48</TargetFramework>
    <Optimize>false</Optimize>
  </PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)' == '2023'">
		<TargetFramework>net48</TargetFramework>
		<Optimize>false</Optimize>
	</PropertyGroup>
  
  <PropertyGroup>
    <Path_DLL_API>..\..\RevitAPI\</Path_DLL_API>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Forcibly set platform to 'x64' and ignore architecture-related problems -->
    <PlatformTarget>x64</PlatformTarget>
    <Platforms>x64</Platforms>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>

    <!-- Force the project to use the legacy debugger engine -->
    <DebugEngines>{351668CC-8477-4fbf-BFE3-5F1006E4DB1F}</DebugEngines>

    <!-- Define handy symbols to use in the code in order to accommodate different Revit versions,
        e.g. by wrapping legacy / deprecated API calls with #if REVIT2014 | REVIT2015 -->
    <DefineConstants>DEBUG;REVIT$(Configuration)</DefineConstants>
    <PreprocessorDefinitions>$(DefineConstants)</PreprocessorDefinitions>

    <!-- Multiple targets can cause obj folder locking by concurrent builds -->
    <BuildInParallel>false</BuildInParallel>

    <!-- Override 'OutputPath'  -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <OutputPath>bin\$(Configuration)</OutputPath>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <ApplicationIcon />
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Images\FileUpgrader32.png" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Images\FileUpgrader32.png" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Syncfusion.SfDataGrid.WinForms" Version="19.1.0.67" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="AdWindows">
      <HintPath>$(Path_DLL_API)\$(Configuration)\AdWindows.dll</HintPath>
      <EmbedInteropTypes>false</EmbedInteropTypes>
      <Private>false</Private>
    </Reference>
    <Reference Include="RevitAPI">
      <HintPath>$(Path_DLL_API)\$(Configuration)\RevitAPI.dll</HintPath>
      <EmbedInteropTypes>false</EmbedInteropTypes>
      <Private>false</Private>
    </Reference>
    <Reference Include="RevitAPIUI">
      <HintPath>$(Path_DLL_API)\$(Configuration)\RevitAPIUI.dll</HintPath>
      <EmbedInteropTypes>false</EmbedInteropTypes>
      <Private>false</Private>
    </Reference>
    <!-- 
    <Reference Include="RevitAPIUI">
      <HintPath>$(Path_DLL_API)\$(Configuration)\UIFramework.dll</HintPath>
      <EmbedInteropTypes>false</EmbedInteropTypes>
      <Private>false</Private>
    </Reference>
    -->
  </ItemGroup>

  <ItemGroup>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System.Printing" />
    <Reference Include="WindowsBase" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System.Printing" />
    <Reference Include="WindowsBase" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <None Update="FileUpgrader.addin">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!--<Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="copy &quot;$(ProjectDir)FileUpgrader_2022.addin&quot; &quot;$(AppData)\Autodesk\REVIT\Addins\2022\FileUpgrader.addin&quot;" />
  </Target>-->

  <!-- Build debug manifest at build time -->
  <Target Name="CreateAddinManifest" AfterTargets="AfterBuild">
    <ItemGroup>
      <AddinManifest Include="$(AppData)\Autodesk\REVIT\Addins\$(Configuration)\FileUpgrader.addin" />
    </ItemGroup>
    <ReplaceFileText InputFilename="FileUpgrader.addin" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$(TargetDir)$(AssemblyName).dll&lt;" />
    <ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;VendorId&gt;(.*?)&lt;" ReplacementText="&lt;VendorId&gt;$(PackageId)&lt;" />
    <ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;FullClassName&gt;(.*?)&lt;" ReplacementText="&lt;FullClassName&gt;$(RootNamespace).App&lt;" />
  </Target>

  <UsingTask Condition="'$(MSBuildRuntimeType)' == 'Full'" TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <UsingTask Condition="'$(MSBuildRuntimeType)' == 'Core'" TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
      </Code>
    </Task>
  </UsingTask> 
</Project>
