<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAAFwAAAB8AAAAhgAA
        AIcAAAAMAAAAAAAAAAAAAAAAAAAAAAAAABEAAACPAAAAjgAAAIQAAABkAAAAJAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAMQAAAD9AAAA/wAA
        AP8AAAD/AAAA/wAAABcAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAP8AAAD/AAAA/wAAAP8AAAD+AAAAywAA
        AE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAKUAAAD+AAAA/wAA
        ANAAAACGAAAAXwAAAN0AAAD/AAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA/wAAANgAAABgAAAAiAAA
        ANMAAAD/AAAA/gAAAKoAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADDAAAA/wAA
        ANgAAABDAAAAAAAAAAAAAAAAAAAAzAAAAP8AAAAXAAAAAAAAAAAAAAAAAAAAAAAAAB8AAAD/AAAAxAAA
        AAAAAAAAAAAAAAAAAEgAAADdAAAA/wAAAMgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAA
        AP8AAAC7AAAADAAAAAAAAAAAAAAAAAAAAAAAAADMAAAA/wAAABcAAAAAAAAAAAAAAAAAAAAAAAAAHwAA
        AP8AAADEAAAAAAAAAAAAAAAAAAAAAAAAABEAAADDAAAA/wAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEkAAAD/AAAA1QAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAD/AAAAFwAAAAAAAAAAAAAAAAAA
        AAAAAAAfAAAA/wAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAAADdAAAA/gAAAEsAAAAAAAAAAAAA
        AAAAAAAAAAAAyAAAAP8AAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzAAAAP8AAAAXAAAAAAAA
        AAAAAAAAAAAAAAAAAB8AAAD/AAAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAD/AAAAxwAA
        AAAAAAAAAAAAAAAAACIAAAD+AAAAygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMAAAA/wAA
        ABcAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAP8AAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ANMAAAD9AAAAHgAAAAAAAAAAAAAAXAAAAP8AAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AMwAAAD/AAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA/wAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAiAAAAP8AAABdAAAAAAAAAAAAAAB9AAAA/wAAAFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAzAAAAP8AAAAXAAAAAAAAAAAAAAAAAAAAAAAAAB8AAAD/AAAAxAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABgAAAA/wAAAH0AAAAAAAAAAAAAAIcAAAD/AAAATAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADMAAAA/wAAABcAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAP8AAADEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFoAAAD/AAAAhgAAAAAAAAAAAAAAhwAAAP8AAABLAAAAAAAA
        AB0AAACEAAAAhQAAAIUAAACFAAAAhQAAAOcAAAD/AAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA/wAA
        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
        /8PB//+H4P//B/AAAA/4AAA//wAA//////8=
</value>
  </data>
</root>